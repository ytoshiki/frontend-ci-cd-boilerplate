# CircleCI configuration file

version: 2.1

jobs:
  build:
    docker:
      # Primary container image where all steps run
      - image: cimg/node:18.17.0
    # Could be called whatever, it's just where CircleCI image will be added
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          keys:
            # Search for the cache that matches the checksum of this package.json
            # This key will fail if this file has been modified
            - app-{{ checksum "package.json" }}
            # Search for the most recently generated cache used from any branch.
            - app-
      - run:
          name: Install dependencies
          command: npm install
      # this is not called if cache found in restore_cache
      - save_cache:
          key: app-{{ checksum "package.json" }}
          paths:
            - node_modules
  deploy-to-aws-s3:
    docker:
      - image: cimg/node:18.17.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update 
            sudo apt-get install -y awscli 
            sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: Build project
          command: |
            npm install 
            npm run build
            cd dist 
            zip ../dist.zip -f * .[^.]*
            echo "Build succeeded"
      - run:
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/dist s3://${AWS_PRODUCTION_BUCKET} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/dist s3://${AWS_STAGING_BUCKET} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/dist s3://${AWS_DEV_BUCKET} --delete
            fi
  invalidate-cloudfront-cache:
    docker:
      - image: cimg/node:18.17.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update 
            sudo apt-get install -y awscli 
            sudo apt-get install -y python-pip python3-dev build-essential
      # - run:
      #     name: Build project
      #     command: |
      #       npm install
      #       npm run build
      #       cd dist
      #       zip ../dist.zip -f * .[^.]*
      #       echo "Build succeeded"
      - run:
          name: Invalidate CloudFront Cache
          command: |
            aws configure set preview.cloudfront
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - production
      - invalidate-cloudfront-cache:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - production
